---
#######
####### Major credit to my brother from another mother for the Let's Encrypt configurations:
#######

#       d88b  .o88b. db   db d8888b. d888888b .d8888. d888888b  d888b  d888888b d888888b
#       `8P' d8P  Y8 88   88 88  `8D   `88'   88'  YP `~~88~~' 88' Y8b   `88'   `~~88~~'
#        88  8P      88ooo88 88oobY'    88    `8bo.      88    88         88       88
#        88  8b      88~~~88 88`8b      88      `Y8b.    88    88  ooo    88       88
#    db. 88  Y8b  d8 88   88 88 `88.   .88.   db   8D    88    88. ~8~   .88.      88
#    Y8888P   `Y88P' YP   YP 88   YD Y888888P `8888Y'    YP     Y888P  Y888888P    YP

- name: Install nginx
  ansible.builtin.package:
    name: nginx
    state: present
  notify: Nginx enable

- name: Install certbot
  ansible.builtin.package:
    name: certbot
    state: present

- name: Install rsync
  ansible.builtin.package:
    name: rsync
    state: present

- name: Install nginx configuration
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: "0774"
  notify: Nginx reload

- name: Generate list of domains to generate certificates for
  ansible.builtin.set_fact:
    domains: "{{ nginx_sites | map(attribute='domain') | list }}"

- name: Check letsencrypt webroot exists
  ansible.builtin.file:
    name: "{{ nginx_tls_well_known_location }}"
    state: directory
    mode: "0774"
    owner: nginx
    group: nginx

- name: Check if certificate is present
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ nginx_sites[0]["domain"] }}
  register: cert_live

- name: Clear config dir if cert does not exist
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    state: absent
  when: not cert_live.stat.exists

- name: Create config dir again if deleted
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    state: directory
    mode: "0774"
  when: not cert_live.stat.exists

- name: Restart nginx if config had to be wiped
  ansible.builtin.service:
    name: nginx
    state: restarted
  when: not cert_live.stat.exists

- name: Provision TLS certificates for all configured domains
  ansible.builtin.command: >-
    /usr/bin/certbot
    --agree-tos
    --non-interactive
    --email {{ nginx_tls_email }}
    --authenticator webroot
    --webroot-path {{ nginx_tls_well_known_location | quote }}
    --domains {{ domains | join(",") | quote }}
    certonly
  args:
    creates: /etc/letsencrypt/live/{{ nginx_sites[0]["domain"] }}

- name: Copy HTPASSWD file
  ansible.builtin.copy:
    content: "{{ nginx_htpasswd }}"
    dest: /etc/nginx/htpasswd
    mode: "0600"
    owner: nginx
    group: nginx

- name: Generate nginx configurations
  ansible.builtin.template:
    src: nginx-site.j2
    dest: /etc/nginx/conf.d/{{ item.name }}
    mode: "0774"
  with_items:
    - "{{ nginx_sites }}"
  notify: Nginx reload

- name: Reload nginx after certificate renewal
  ansible.builtin.copy:
    content: |
      #!/bin/sh
      set -ex

      systemctl reload nginx
    dest: /etc/letsencrypt/renewal-hooks/deploy/reload-nginx
    owner: root
    group: root
    mode: "0500"
